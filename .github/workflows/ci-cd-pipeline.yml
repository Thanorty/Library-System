name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Install Docker
        run: |
          sudo apt-get purge containerd containerd.io -y
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list'
          sudo apt-get update
          sudo apt-get install -y containerd.io docker-ce docker-ce-cli

      - name: Build Docker image
        run: sudo docker build -t book-borrowing-system .

      - name: Run Docker container
        run: sudo docker run -d -p 8080:8080 book-borrowing-system

      - name: Verify Docker container is running
        run: docker ps

      - name: Wait for PostgreSQL to be ready (inside Docker)
        run: |
          docker exec postgres pg_isready -U postgres
        continue-on-error: true

      - name: Run tests
        run: ./gradlew test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        run: echo "Deploying app"
        # Add your deployment steps here (e.g., push Docker image to Docker Hub, deploy to AWS, etc.)
