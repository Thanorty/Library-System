name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew
        
      - name: Build with Gradle
        run: ./gradlew clean build -x test
        
      - name: Install Docker
        run: |
          # Remove any existing Docker installations
          sudo apt-get remove docker docker-engine docker.io containerd runc || true
          sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-compose-plugin || true
          
          # Install packages to allow apt to use a repository over HTTPS
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg
      
          # Add Docker's official GPG key
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
      
          # Set up the repository
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      
          # Install Docker Engine
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          
          # Verify Docker installation
          sudo docker --version
          
      - name: Run tests
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/library_db
          SPRING_DATASOURCE_USERNAME: library_user
          SPRING_DATASOURCE_PASSWORD: library_password
        run: ./gradlew test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to server
        run: echo "Deploying app"
        # Add your deployment steps here
